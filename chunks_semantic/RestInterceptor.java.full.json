{
  "name": "RestInterceptor",
  "type": "class_full",
  "content": "/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the \"Elastic License\n * 2.0\", the \"GNU Affero General Public License v3.0 only\", and the \"Server Side\n * Public License v 1\"; you may not use this file except in compliance with, at\n * your election, the \"Elastic License 2.0\", the \"GNU Affero General Public\n * License v3.0 only\", or the \"Server Side Public License, v 1\".\n */\n\npackage org.elasticsearch.rest;\n\nimport org.elasticsearch.action.ActionListener;\n\n/**\n * Wraps the execution of a {@link RestHandler}\n */\n@FunctionalInterface\npublic interface RestInterceptor {\n\n    /**\n     * @param listener The interceptor responds with {@code True} if the handler should be called,\n     *                 or {@code False} if the request has been entirely handled by the interceptor.\n     *                 In the case of {@link ActionListener#onFailure(Exception)}, the target handler\n     *                 will not be called, the request will be treated as unhandled, and the regular\n     *                 rest exception handling will be performed\n     */\n    void intercept(RestRequest request, RestChannel channel, RestHandler targetHandler, ActionListener<Boolean> listener) throws Exception;\n}\n",
  "file_path": "./codebase_small/server/src/main/java/org/elasticsearch/rest/RestInterceptor.java"
}