{
  "name": "FilterRestHandler",
  "type": "class_full",
  "content": "/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the \"Elastic License\n * 2.0\", the \"GNU Affero General Public License v3.0 only\", and the \"Server Side\n * Public License v 1\"; you may not use this file except in compliance with, at\n * your election, the \"Elastic License 2.0\", the \"GNU Affero General Public\n * License v3.0 only\", or the \"Server Side Public License, v 1\".\n */\n\npackage org.elasticsearch.rest;\n\nimport java.util.List;\nimport java.util.Objects;\n\npublic abstract class FilterRestHandler implements RestHandler {\n    private final RestHandler delegate;\n\n    protected FilterRestHandler(RestHandler delegate) {\n        this.delegate = Objects.requireNonNull(delegate);\n    }\n\n    protected RestHandler getDelegate() {\n        return delegate;\n    }\n\n    @Override\n    public RestHandler getConcreteRestHandler() {\n        return delegate.getConcreteRestHandler();\n    }\n\n    @Override\n    public List<RestHandler.Route> routes() {\n        return delegate.routes();\n    }\n\n    @Override\n    public boolean allowSystemIndexAccessByDefault() {\n        return delegate.allowSystemIndexAccessByDefault();\n    }\n\n    @Override\n    public boolean canTripCircuitBreaker() {\n        return delegate.canTripCircuitBreaker();\n    }\n\n    @Override\n    public boolean supportsBulkContent() {\n        return delegate.supportsBulkContent();\n    }\n\n    @Override\n    public boolean mediaTypesValid(RestRequest request) {\n        return delegate.mediaTypesValid(request);\n    }\n}\n",
  "file_path": "./codebase_small/server/src/main/java/org/elasticsearch/rest/FilterRestHandler.java"
}