{
  "name": "LoggingChunkedRestResponseBodyPart",
  "type": "class_full",
  "content": "/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the \"Elastic License\n * 2.0\", the \"GNU Affero General Public License v3.0 only\", and the \"Server Side\n * Public License v 1\"; you may not use this file except in compliance with, at\n * your election, the \"Elastic License 2.0\", the \"GNU Affero General Public\n * License v3.0 only\", or the \"Server Side Public License, v 1\".\n */\n\npackage org.elasticsearch.rest;\n\nimport org.apache.lucene.util.BytesRef;\nimport org.elasticsearch.action.ActionListener;\nimport org.elasticsearch.common.bytes.ReleasableBytesReference;\nimport org.elasticsearch.common.recycler.Recycler;\n\nimport java.io.IOException;\nimport java.io.OutputStream;\n\npublic class LoggingChunkedRestResponseBodyPart implements ChunkedRestResponseBodyPart {\n\n    private final ChunkedRestResponseBodyPart inner;\n    private final OutputStream loggerStream;\n\n    public LoggingChunkedRestResponseBodyPart(ChunkedRestResponseBodyPart inner, OutputStream loggerStream) {\n        this.inner = inner;\n        this.loggerStream = loggerStream;\n    }\n\n    @Override\n    public boolean isPartComplete() {\n        return inner.isPartComplete();\n    }\n\n    @Override\n    public boolean isLastPart() {\n        return inner.isLastPart();\n    }\n\n    @Override\n    public void getNextPart(ActionListener<ChunkedRestResponseBodyPart> listener) {\n        inner.getNextPart(listener.map(continuation -> new LoggingChunkedRestResponseBodyPart(continuation, loggerStream)));\n    }\n\n    @Override\n    public ReleasableBytesReference encodeChunk(int sizeHint, Recycler<BytesRef> recycler) throws IOException {\n        var chunk = inner.encodeChunk(sizeHint, recycler);\n        try {\n            chunk.writeTo(loggerStream);\n        } catch (Exception e) {\n            assert false : e; // nothing really to go wrong here\n        }\n\n        return chunk;\n    }\n\n    @Override\n    public String getResponseContentTypeString() {\n        return inner.getResponseContentTypeString();\n    }\n}\n",
  "file_path": "./codebase_small/server/src/main/java/org/elasticsearch/rest/LoggingChunkedRestResponseBodyPart.java"
}